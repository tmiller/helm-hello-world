apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: regcred
  annotations:
    argocd.argoproj.io/sync-wave: "-50"
  labels:
    {{- include "httpbin.labels" . | nindent 4 }}
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: {{ .Values.eso.secretStoreKind }}
    name: {{ .Values.eso.secretStoreName }}
  target:
    template:
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: "{{ `{{ .regcred | toString }}` }}"
    creationPolicy: Owner
  data:
  - secretKey: regcred
    remoteRef:
      key: /k8s/{{ .Values.environment }}/global/regcred

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "httpbin.fullname" . }}-env
  annotations:
    argocd.argoproj.io/sync-wave: "-50"
  labels:
    {{- include "httpbin.labels" . | nindent 4 }}
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: {{ .Values.eso.secretStoreKind }}
    name: {{ .Values.eso.secretStoreName }}
  dataFrom:
    - find:
        path: "/k8s/{{ .Values.environment }}/core/{{ .Values.customer }}/env"
        name:
          regexp: ".*"
      rewrite:
        - regexp:
          # source: "_k8s_{{ .Values.environment }}_core_{{ .Values.customer }}_env_(.*)"
            source: "k8s"
            target: "i18n"
